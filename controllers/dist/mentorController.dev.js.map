{"version":3,"sources":["mentorController.js"],"names":["db","require","mentorController","create","req","res","name","body","query","result","status","json","id","insertId","error","message","getAll","mentors","update","params","module","exports"],"mappings":";;;;;;;;;;AAAA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AAEA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,MAAM,EAAE,gBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,YAAAA,IAFR,GAEiBF,GAAG,CAACG,IAFrB,CAEQD,IAFR;AAAA;AAAA,4CAGuBN,EAAE,CAACQ,KAAH,CAAS,sCAAT,EAAiD,CAACF,IAAD,CAAjD,CAHvB;;AAAA;AAAA;AAAA;AAGOG,YAAAA,MAHP;AAIAJ,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,EAAE,EAAEH,MAAM,CAACI;AAAb,aAArB;AAJA;AAAA;;AAAA;AAAA;AAAA;AAMAR,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,cAAAA,KAAK,EAAE,YAAMC;AAAf,aAArB;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADa;AAWrBC,EAAAA,MAAM,EAAE,gBAAOZ,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEwBL,EAAE,CAACQ,KAAH,CAAS,oCAAT,CAFxB;;AAAA;AAAA;AAAA;AAEOS,YAAAA,OAFP;AAGAZ,YAAAA,GAAG,CAACM,IAAJ,CAASM,OAAT;AAHA;AAAA;;AAAA;AAAA;AAAA;AAKAZ,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,cAAAA,KAAK,EAAE,aAAMC;AAAf,aAArB;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAXa;AAoBrBG,EAAAA,MAAM,EAAE,gBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,YAAAA,IAFR,GAEiBF,GAAG,CAACG,IAFrB,CAEQD,IAFR;AAAA;AAAA,4CAGMN,EAAE,CAACQ,KAAH,CAAS,gDAAT,EAA2D,CAACF,IAAD,EAAOF,GAAG,CAACe,MAAJ,CAAWP,EAAlB,CAA3D,CAHN;;AAAA;AAIAP,YAAAA,GAAG,CAACM,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AAJA;AAAA;;AAAA;AAAA;AAAA;AAMAV,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,cAAAA,KAAK,EAAE,aAAMC;AAAf,aAArB;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GApBa;AA8BrB,YAAQ,iBAAOX,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEML,EAAE,CAACQ,KAAH,CAAS,wCAAT,EAAmD,CAACJ,GAAG,CAACe,MAAJ,CAAWP,EAAZ,CAAnD,CAFN;;AAAA;AAGAP,YAAAA,GAAG,CAACM,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AAHA;AAAA;;AAAA;AAAA;AAAA;AAKAV,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,cAAAA,KAAK,EAAE,aAAMC;AAAf,aAArB;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9Ba,CAAzB;AAwCAK,MAAM,CAACC,OAAP,GAAiB;AAAEnB,EAAAA,gBAAgB,EAAhBA;AAAF,CAAjB,C,CAAuC","sourcesContent":["// mentorController.js\r\nconst db = require('../config/db');\r\n\r\nconst mentorController = {\r\n    create: async (req, res) => {\r\n        try {\r\n            const { name } = req.body;\r\n            const [result] = await db.query('INSERT INTO mentor (name) VALUES (?)', [name]);\r\n            res.status(201).json({ id: result.insertId });\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    },\r\n  \r\n    getAll: async (req, res) => {\r\n        try {\r\n            const [mentors] = await db.query('SELECT * FROM mentor ORDER BY name');\r\n            res.json(mentors);\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    },\r\n  \r\n    update: async (req, res) => {\r\n        try {\r\n            const { name } = req.body;\r\n            await db.query('UPDATE mentor SET name = ? WHERE mentor_id = ?', [name, req.params.id]);\r\n            res.json({ message: 'Mentor updated' });\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    },\r\n  \r\n    delete: async (req, res) => {\r\n        try {\r\n            await db.query('DELETE FROM mentor WHERE mentor_id = ?', [req.params.id]);\r\n            res.json({ message: 'Mentor deleted' });\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = { mentorController }; // Pastikan ini ada"],"file":"mentorController.dev.js"}