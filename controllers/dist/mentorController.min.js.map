{"version":3,"sources":["mentorController.js"],"names":["db","require","mentorController","create","req","res","name","_ref","_ref2","result","regeneratorRuntime","async","_context","prev","next","body","awrap","query","sent","_slicedToArray","status","json","id","insertId","t0","error","message","stop","_ref3","_ref4","mentors","_context2","update","_context3","params","delete","_context4","module","exports"],"mappings":"mnBACA,IAAMA,GAAKC,QAAQ,gBAEbC,iBAAmB,CACrBC,OAAQ,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAEQP,EAASF,EAAIW,KAAbT,KAFRM,EAAAE,KAAA,EAAAJ,mBAAAM,MAGuBhB,GAAGiB,MAAM,uCAAwC,CAACX,KAHzE,KAAA,EAAAC,EAAAK,EAAAM,KAAAV,EAAAW,eAAAZ,EAAA,GAGOE,EAHPD,EAAA,GAIAH,EAAIe,OAAO,KAAKC,KAAK,CAAEC,GAAIb,EAAOc,WAJlCX,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,MAAA,GAJZP,EAAAe,OAAA,KAAAC,KAAA,CAAAI,MAAAb,EAAAY,GAAAE,UAIY,KAAA,GAAA,IAAA,MAAA,OAAAd,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAARxB,OAAQ,SAAAC,EAAAC,GAAA,IAAAuB,EAAAC,EAAAC,EAAA,OAAApB,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAM,MAYwBhB,GAAGiB,MAAM,uCAZjC,KAAA,EAAAW,EAAAG,EAAAb,KAAAW,EAAAV,eAAAS,EAAA,GAYOE,EAZPD,EAAA,GAAAxB,EAAAgB,KAAAS,GAAAC,EAAAjB,KAAA,GAAA,MAAA,KAAA,EAAAiB,EAAAlB,KAAA,EAAAkB,EAAAP,GAAAO,EAAA,MAAA,GAAA1B,EAAAe,OAAA,KAAAC,KAAA,CAAAI,MAAAM,EAAAP,GAAAE,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAK,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAK,OAAA,SAAA5B,EAAAC,GAAA,IAAAC,EAAA,OAAAI,mBAAAC,MAAA,SAAAsB,GAAA,OAAA,OAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,KAAA,EAAA,OAAAmB,EAAApB,KAAA,EAqBQP,EAASF,EAAIW,KAAbT,KArBR2B,EAAAnB,KAAA,EAAAJ,mBAAAM,MAAAhB,GAAAiB,MAAA,iDAAA,CAAAX,EAAAF,EAAA8B,OAAAZ,MAAA,KAAA,EAAAjB,EAAAgB,KAAA,CAAAK,QAAA,mBAAAO,EAAAnB,KAAA,GAAA,MAAA,KAAA,EAAAmB,EAAApB,KAAA,EAAAoB,EAAAT,GAAAS,EAAA,MAAA,GAGOxB,EAAAA,OAHP,KAAAY,KAAA,CAAAI,MAAAQ,EAAAT,GAAAE,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAN,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAQ,OAAA,SAAA/B,EAAAC,GAAA,OAAAK,mBAAAC,MAAA,SAAAyB,GAAA,OAAA,OAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,KAAA,EAAA,OAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAAAJ,mBAAAM,MA+BMhB,GAAGiB,MAAM,yCAA0C,CAACb,EAAI8B,OAAOZ,MA/BrE,KAAA,EAAAjB,EAAAgB,KAAA,CAAAK,QAAA,mBAAAU,EAAAtB,KAAA,EAAA,MAAA,KAAA,EAAAsB,EAAAvB,KAAA,EAAAuB,EAAAZ,GAAAY,EAAA,MAAA,GAAA/B,EAAAe,OAAA,KAAAC,KAAA,CAAAI,MAAAW,EAAAZ,GAAAE,UAAA,KAAA,EAAA,IAAA,MAAA,OAAAU,EAAAT,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAU,OAAAC,QAAA,CAAApC,iBAAAA","file":"mentorController.min.js","sourcesContent":["// mentorController.js\r\nconst db = require('../config/db');\r\n\r\nconst mentorController = {\r\n    create: async (req, res) => {\r\n        try {\r\n            const { name } = req.body;\r\n            const [result] = await db.query('INSERT INTO mentor (name) VALUES (?)', [name]);\r\n            res.status(201).json({ id: result.insertId });\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    },\r\n  \r\n    getAll: async (req, res) => {\r\n        try {\r\n            const [mentors] = await db.query('SELECT * FROM mentor ORDER BY name');\r\n            res.json(mentors);\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    },\r\n  \r\n    update: async (req, res) => {\r\n        try {\r\n            const { name } = req.body;\r\n            await db.query('UPDATE mentor SET name = ? WHERE mentor_id = ?', [name, req.params.id]);\r\n            res.json({ message: 'Mentor updated' });\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    },\r\n  \r\n    delete: async (req, res) => {\r\n        try {\r\n            await db.query('DELETE FROM mentor WHERE mentor_id = ?', [req.params.id]);\r\n            res.json({ message: 'Mentor deleted' });\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = { mentorController }; // Pastikan ini ada"]}