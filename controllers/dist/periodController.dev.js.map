{"version":3,"sources":["periodController.js"],"names":["db","require","periodController","create","req","res","body","period_name","start_date","end_date","query","result","status","json","id","insertId","error","message","getAll","periods","module","exports"],"mappings":";;;;;;;;;;AAAA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AAEA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,MAAM,EAAE,gBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE8CD,GAAG,CAACE,IAFlD,EAEQC,WAFR,aAEQA,WAFR,EAEqBC,UAFrB,aAEqBA,UAFrB,EAEiCC,QAFjC,aAEiCA,QAFjC;AAAA;AAAA,4CAGuBT,EAAE,CAACU,KAAH,CACnB,yEADmB,EAEnB,CAACH,WAAD,EAAcC,UAAd,EAA0BC,QAA1B,CAFmB,CAHvB;;AAAA;AAAA;AAAA;AAGOE,YAAAA,MAHP;AAOAN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,EAAE,EAAEH,MAAM,CAACI;AAAb,aAArB;AAPA;AAAA;;AAAA;AAAA;AAAA;AASAV,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,cAAAA,KAAK,EAAE,YAAMC;AAAf,aAArB;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADa;AAcrBC,EAAAA,MAAM,EAAE,gBAAOd,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEwBL,EAAE,CAACU,KAAH,CAAS,sBAAT,CAFxB;;AAAA;AAAA;AAAA;AAEOS,YAAAA,OAFP;AAGAd,YAAAA,GAAG,CAACQ,IAAJ,CAASM,OAAT;AAHA;AAAA;;AAAA;AAAA;AAAA;AAKAd,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,cAAAA,KAAK,EAAE,aAAMC;AAAf,aAArB;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAda,CAAzB;AAwBAG,MAAM,CAACC,OAAP,GAAiB;AAAEnB,EAAAA,gBAAgB,EAAhBA;AAAF,CAAjB,C,CAAuC","sourcesContent":["// periodController.js\r\nconst db = require('../config/db');\r\n\r\nconst periodController = {\r\n    create: async (req, res) => {\r\n        try {\r\n            const { period_name, start_date, end_date } = req.body;\r\n            const [result] = await db.query(\r\n                'INSERT INTO period (period_name, start_date, end_date) VALUES (?, ?, ?)',\r\n                [period_name, start_date, end_date]\r\n            );\r\n            res.status(201).json({ id: result.insertId });\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    },\r\n\r\n    getAll: async (req, res) => {\r\n        try {\r\n            const [periods] = await db.query('SELECT * FROM period');\r\n            res.json(periods);\r\n        } catch (error) {\r\n            res.status(500).json({ error: error.message });\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = { periodController }; // Pastikan ini ada"],"file":"periodController.dev.js"}