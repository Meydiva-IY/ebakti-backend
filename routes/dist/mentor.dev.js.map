{"version":3,"sources":["mentor.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","console","error","status","json","message","post","name","body","sql","result","id","insertId","put","params","affectedRows","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all mentors\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM Mentor', (err, results) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(500).json({ message: 'Internal Server Error' });\r\n        }\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new mentor\r\nrouter.post('/', (req, res) => {\r\n    const { name } = req.body;\r\n    const sql = 'INSERT INTO Mentor (name) VALUES (?)';\r\n    db.query(sql, [name], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error creating mentor' });\r\n        }\r\n        res.status(201).json({ id: result.insertId, name });\r\n    });\r\n});\r\n\r\n// Update a mentor\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { name } = req.body;\r\n    const sql = 'UPDATE Mentor SET name = ? WHERE mentor_id = ?';\r\n    db.query(sql, [name, id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error updating mentor' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Mentor not found' });\r\n        }\r\n        res.json({ message: 'Mentor updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a mentor\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM Mentor WHERE mentor_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error deleting mentor' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Mentor not found' });\r\n        }\r\n        res.json({ message: 'Mentor deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"mentor.dev.js"}