{"version":3,"sources":["task.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","json","post","body","title","description","due_date","task_pic","sql","result","status","id","insertId","put","params","message","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,EAAE,GAAGH,OAAO,CAAC,cAAD,CAAlB,C,CAEA;;;AACAC,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BH,EAAAA,EAAE,CAACI,KAAH,CAAS,oBAAT,EAA+B,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC7C,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACTF,IAAAA,GAAG,CAACI,IAAJ,CAASD,OAAT;AACH,GAHD;AAIH,CALD,E,CAOA;;AACAR,MAAM,CAACU,IAAP,CAAY,GAAZ,EAAiB,UAACN,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACwBD,GAAG,CAACO,IAD5B;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,WADY,aACZA,WADY;AAAA,MACCC,QADD,aACCA,QADD;AAAA,MACWC,QADX,aACWA,QADX;AAE3B,MAAMC,GAAG,GAAG,+EAAZ;AACAd,EAAAA,EAAE,CAACI,KAAH,CAASU,GAAT,EAAc,CAACJ,KAAD,EAAQC,WAAR,EAAqBC,QAArB,EAA+BC,QAA/B,CAAd,EAAwD,UAACR,GAAD,EAAMU,MAAN,EAAiB;AACrE,QAAIV,GAAJ,EAAS,MAAMA,GAAN;AACTF,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAEU,MAAAA,EAAE,EAAEF,MAAM,CAACG,QAAb;AAAuBR,MAAAA,KAAK,EAALA,KAAvB;AAA8BC,MAAAA,WAAW,EAAXA,WAA9B;AAA2CC,MAAAA,QAAQ,EAARA,QAA3C;AAAqDC,MAAAA,QAAQ,EAARA;AAArD,KAArB;AACH,GAHD;AAIH,CAPD,E,CASA;;AACAf,MAAM,CAACqB,GAAP,CAAW,MAAX,EAAmB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAAA,MACrBc,EADqB,GACdf,GAAG,CAACkB,MADU,CACrBH,EADqB;AAAA,mBAEsBf,GAAG,CAACO,IAF1B;AAAA,MAErBC,KAFqB,cAErBA,KAFqB;AAAA,MAEdC,WAFc,cAEdA,WAFc;AAAA,MAEDC,QAFC,cAEDA,QAFC;AAAA,MAESC,QAFT,cAESA,QAFT;AAG7B,MAAMC,GAAG,GAAG,0FAAZ;AACAd,EAAAA,EAAE,CAACI,KAAH,CAASU,GAAT,EAAc,CAACJ,KAAD,EAAQC,WAAR,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCI,EAAzC,CAAd,EAA4D,UAACZ,GAAD,EAAMU,MAAN,EAAiB;AACzE,QAAIV,GAAJ,EAAS,MAAMA,GAAN;AACTF,IAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAAT;AACH,GAHD;AAIH,CARD,E,CAUA;;AACAvB,MAAM,UAAN,CAAc,MAAd,EAAsB,UAACI,GAAD,EAAMC,GAAN,EAAc;AAAA,MACxBc,EADwB,GACjBf,GAAG,CAACkB,MADa,CACxBH,EADwB;AAEhC,MAAMH,GAAG,GAAG,oCAAZ;AACAd,EAAAA,EAAE,CAACI,KAAH,CAASU,GAAT,EAAc,CAACG,EAAD,CAAd,EAAoB,UAACZ,GAAD,EAAMU,MAAN,EAAiB;AACjC,QAAIV,GAAJ,EAAS,MAAMA,GAAN;AACTF,IAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAAT;AACH,GAHD;AAIH,CAPD;AASAC,MAAM,CAACC,OAAP,GAAiBzB,MAAjB","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all tasks\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM Task', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new task\r\nrouter.post('/', (req, res) => {\r\n    const { title, description, due_date, task_pic } = req.body;\r\n    const sql = 'INSERT INTO Task (title, description, due_date, task_pic) VALUES (?, ?, ?, ?)';\r\n    db.query(sql, [title, description, due_date, task_pic], (err, result) => {\r\n        if (err) throw err;\r\n        res.status(201).json({ id: result.insertId, title, description, due_date, task_pic });\r\n    });\r\n});\r\n\r\n// Update a task\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { title, description, due_date, task_pic } = req.body;\r\n    const sql = 'UPDATE Task SET title = ?, description = ?, due_date = ?, task_pic = ? WHERE task_id = ?';\r\n    db.query(sql, [title, description, due_date, task_pic, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Task updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a task\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM Task WHERE task_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Task deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"task.dev.js"}