{"version":3,"sources":["taskSubmission.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","json","post","body","task_id","user_id","score","taskfile_path","link","feedback","status","sql","result","id","insertId","put","params","message","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all task submissions\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM TaskSubmission', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new task submission\r\nrouter.post('/', (req, res) => {\r\n    const { task_id, user_id, score, taskfile_path, link, feedback, status } = req.body;\r\n    const sql = 'INSERT INTO TaskSubmission (task_id, user_id, score, taskfile_path, link, feedback, status) VALUES (?, ?, ?, ?, ?, ?, ?)';\r\n    db.query(sql, [task_id, user_id, score, taskfile_path, link, feedback, status], (err, result) => {\r\n        if (err) throw err;\r\n        res.status(201).json({ id: result.insertId, task_id, user_id, score, taskfile_path, link, feedback, status });\r\n    });\r\n});\r\n\r\n// Update a task submission\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { task_id, user_id, score, taskfile_path, link, feedback, status } = req.body;\r\n    const sql = 'UPDATE TaskSubmission SET task_id = ?, user_id = ?, score = ?, taskfile_path = ?, link = ?, feedback = ?, status = ? WHERE submission_id = ?';\r\n    db.query(sql, [task_id, user_id, score, taskfile_path, link, feedback, status, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Task submission updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a task submission\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM TaskSubmission WHERE submission_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Task submission deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"taskSubmission.dev.js"}