{"version":3,"sources":["taskSubmission.js"],"names":["express","require","router","Router","get","req","res","db","query","err","results","json","post","_req$body","body","task_id","user_id","score","taskfile_path","link","feedback","status","result","insertId","id","params","message","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,GAAOC,QAAGA,gBAKhBC,OAAOE,IAAI,IAAK,SAACC,EAAKC,GAHhBC,GAAEC,MAAGP,+BAEX,SAAAQ,EAAAC,GAGQ,GAAID,EAAK,MAAMA,EACfH,EAAIK,KAAKD,OACZR,OAHDU,KAAA,IAAA,SAAAP,EAAAC,GAAA,IAAAO,EAMJR,EAAAS,KAAAC,EANIF,EAMJE,QAAAC,EANIH,EAMJG,QAAAC,EANIJ,EAMJI,MAAAC,EANIL,EAMJK,cAAAC,EANIN,EAMJM,KAAAC,EANIP,EAMJO,SAAAC,EANIR,EAMJQ,OACAnB,GAAOU,MAES,2HAFC,CAAAG,EAACV,EAAaY,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,SAAAZ,EAAAa,GAAA,GAAAb,EAAA,MACoDK,EAAvEC,EAAAA,OADmB,KAAAJ,KACnBI,CAAAA,GADmBO,EAAAC,SAAAR,QAAAA,EAAAC,QAAAA,EAAAC,MAAAA,EAAAC,cAAAA,EAAAC,KAAAA,EAAAC,SAAAA,EAAAC,OAAAA,QAAAnB,OAC2BkB,IAAAA,OAD3B,SAAAf,EAAAC,GAC2Bc,IAD3BI,EAAAnB,EAAAoB,OAAAD,GAC2BJ,EAC1Cf,EAAAS,KAAAC,EAD0CK,EAC1CL,QAAAC,EAD0CI,EAC1CJ,QAAAC,EAD0CG,EAC1CH,MAAAC,EAD0CE,EAC1CF,cAAAC,EAD0CC,EAC1CD,KAAAC,EAD0CA,EAC1CA,SAAAC,EAD0CD,EAC1CC,OAERd,GAAAC,MADU,+IACD,CAAMC,EAANO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAG,GAAA,SAAAf,EAAAa,GACLD,GAAAA,EAAO,MAAKV,EAASL,EAAEgB,KAAOC,CAAAA,QAAb,6CAA+DJ,OAAAA,OAAAA,OAA/D,SAAAd,EAAAC,GAAA,IAAqEc,EAAAA,EAAAA,OAAAA,GAArEb,GAArBC,MAAoGa,qDAApG,CAAAG,GAAA,SAAAf,EAAAa,GAFJ,GAAAb,EAAA,MAAAA,EAMJH,EAAAK,KAAA,CAAAe,QAAA,6CACiCC,OAAAC,QAAA1B","file":"taskSubmission.min.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all task submissions\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM TaskSubmission', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new task submission\r\nrouter.post('/', (req, res) => {\r\n    const { task_id, user_id, score, taskfile_path, link, feedback, status } = req.body;\r\n    const sql = 'INSERT INTO TaskSubmission (task_id, user_id, score, taskfile_path, link, feedback, status) VALUES (?, ?, ?, ?, ?, ?, ?)';\r\n    db.query(sql, [task_id, user_id, score, taskfile_path, link, feedback, status], (err, result) => {\r\n        if (err) throw err;\r\n        res.status(201).json({ id: result.insertId, task_id, user_id, score, taskfile_path, link, feedback, status });\r\n    });\r\n});\r\n\r\n// Update a task submission\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { task_id, user_id, score, taskfile_path, link, feedback, status } = req.body;\r\n    const sql = 'UPDATE TaskSubmission SET task_id = ?, user_id = ?, score = ?, taskfile_path = ?, link = ?, feedback = ?, status = ? WHERE submission_id = ?';\r\n    db.query(sql, [task_id, user_id, score, taskfile_path, link, feedback, status, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Task submission updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a task submission\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM TaskSubmission WHERE submission_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Task submission deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"]}