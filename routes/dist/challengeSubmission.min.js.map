{"version":3,"sources":["challengeSubmission.js"],"names":["express","require","router","Router","get","req","res","db","query","err","results","json","post","_req$body","body","challenge_id","user_id","score","clgfile_path","feedback","status","result","id","params","_req$body2","sql","insertId","message","put","module"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,GAAOC,QAAGA,gBAKhBC,OAAOE,IAAI,IAAK,SAACC,EAAKC,GAHhBC,GAAEC,MAAGP,oCAEX,SAAAQ,EAAAC,GAGQ,GAAID,EAAK,MAAMA,EACfH,EAAIK,KAAKD,OACZR,OAHDU,KAAA,IAAA,SAAAP,EAAAC,GAAA,IAAAO,EAMJR,EAAAS,KAAAC,EANIF,EAMJE,aAAAC,EANIH,EAMJG,QAAAC,EANIJ,EAMJI,MAAAC,EANIL,EAMJK,aAAAC,EANIN,EAMJM,SAAAC,EANIP,EAMJO,OACAlB,GAAOU,MAES,2HAFC,CAAAG,EAAMT,EAAQW,EAAAC,EAAAC,EAAAC,GAAA,SAAAX,EAAAY,GAAA,GAAAZ,EAAA,MACkDK,EAArEC,EAAAA,OADmB,KAAAJ,KAAA,CACnBI,GAAAA,EAAAA,SADmBA,aAAAA,EAAAC,QAAAA,EAAAC,MAAAA,EAAAC,aAAAA,EAAAC,SAAAA,EAAAC,OAAAA,QAAAlB,OACmCkB,IAAAA,OADnC,SAAAf,EACmCe,GADnC,IAEfE,EAAAjB,EAAAkB,OAAAD,GAFeE,EAGbnB,EAAgES,KAArEW,EAHkBD,EAGlBC,aAAMV,EAHYS,EAGZT,QAAcC,EAHFQ,EAGER,MAASC,EAHXO,EAGWP,aAAOC,EAHlBM,EAGkBN,SAAcC,EAHhCK,EAGgCL,OAEvDb,GAAGE,MADM,8IACT,CAAAO,EAAqBC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,GAAA,SAAAb,EAAAY,GAAI,GAAEA,EAAOK,MAAAA,EAAUX,EAAAA,KAAAA,CAAYY,QAAZZ,kDAAsDK,OAAAA,OAAAA,OAAAA,SAAAA,EAAAA,GAAAA,IAAlGE,EAAAjB,EAAAkB,OAAAD,GAIRf,GAAAC,MANI,0DAMJ,CAAAc,GAAA,SAAAb,EAAAY,GAgBQ,GAAIZ,EAAK,MAAMA,EAfhBmB,EAAIjB,KAAX,CAAmBgB,QAAA,kDAAcE,OAEPb,QAFOd","file":"challengeSubmission.min.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all challenge submissions\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM ChallengeSubmission', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new challenge submission\r\nrouter.post('/', (req, res) => {\r\n    const { challenge_id, user_id, score, clgfile_path, feedback, status } = req.body;\r\n    const sql = 'INSERT INTO ChallengeSubmission (challenge_id, user_id, score, clgfile_path, feedback, status) VALUES (?, ?, ?, ?, ?, ?)';\r\n    db.query(sql, [challenge_id, user_id, score, clgfile_path, feedback, status], (err, result) => {\r\n        if (err) throw err;\r\n        res.status(201).json({ id: result.insertId, challenge_id, user_id, score, clgfile_path, feedback, status });\r\n    });\r\n});\r\n\r\n// Update a challenge submission\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { challenge_id, user_id, score, clgfile_path, feedback, status } = req.body;\r\n    const sql = 'UPDATE ChallengeSubmission SET challenge_id = ?, user_id = ?, score = ?, clgfile_path = ?, feedback = ?, status = ? WHERE submission_id = ?';\r\n    db.query(sql, [challenge_id, user_id, score, clgfile_path, feedback, status, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Challenge submission updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a challenge submission\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM ChallengeSubmission WHERE submission_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Challenge submission deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"]}