{"version":3,"sources":["notification.js"],"names":["express","require","router","Router","db","pusher","get","req","res","query","err","results","json","post","body","user_id","message","is_read","sql","result","trigger","id","insertId","status","put","params","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\nconst pusher = require('../config/pusher'); // Import Pusher configuration\r\n\r\n// Get all notifications\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM Notification', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new notification\r\nrouter.post('/', (req, res) => {\r\n    const { user_id, message, is_read } = req.body;\r\n    const sql = 'INSERT INTO Notification (user_id, message, is_read) VALUES (?, ?, ?)';\r\n    db.query(sql, [user_id, message, is_read], (err, result) => {\r\n        if (err) throw err;\r\n\r\n        // Send notification using Pusher\r\n        pusher.trigger('notifications', 'new-notification', {\r\n            id: result.insertId,\r\n            user_id,\r\n            message,\r\n            is_read\r\n        });\r\n\r\n        res.status(201).json({ id: result.insertId, user_id, message, is_read });\r\n    });\r\n});\r\n\r\n// Update a notification\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { user_id, message, is_read } = req.body;\r\n    const sql = 'UPDATE Notification SET user_id = ?, message = ?, is_read = ? WHERE notification_id = ?';\r\n    db.query(sql, [user_id, message, is_read, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Notification updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a notification\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM Notification WHERE notification_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Notification deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"notification.dev.js"}