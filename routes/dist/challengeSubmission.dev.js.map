{"version":3,"sources":["challengeSubmission.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","json","post","body","challenge_id","user_id","score","clgfile_path","feedback","status","sql","result","id","insertId","put","params","message","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all challenge submissions\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM ChallengeSubmission', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new challenge submission\r\nrouter.post('/', (req, res) => {\r\n    const { challenge_id, user_id, score, clgfile_path, feedback, status } = req.body;\r\n    const sql = 'INSERT INTO ChallengeSubmission (challenge_id, user_id, score, clgfile_path, feedback, status) VALUES (?, ?, ?, ?, ?, ?)';\r\n    db.query(sql, [challenge_id, user_id, score, clgfile_path, feedback, status], (err, result) => {\r\n        if (err) throw err;\r\n        res.status(201).json({ id: result.insertId, challenge_id, user_id, score, clgfile_path, feedback, status });\r\n    });\r\n});\r\n\r\n// Update a challenge submission\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { challenge_id, user_id, score, clgfile_path, feedback, status } = req.body;\r\n    const sql = 'UPDATE ChallengeSubmission SET challenge_id = ?, user_id = ?, score = ?, clgfile_path = ?, feedback = ?, status = ? WHERE submission_id = ?';\r\n    db.query(sql, [challenge_id, user_id, score, clgfile_path, feedback, status, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Challenge submission updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a challenge submission\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM ChallengeSubmission WHERE submission_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Challenge submission deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"challengeSubmission.dev.js"}