{"version":3,"sources":["notification.js"],"names":["express","require","router","Router","pusher","get","req","res","db","query","err","results","json","post","_req$body","body","user_id","message","is_read","result","trigger","insertId","sql","id","put","status","_req$body2"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,GAAOC,QAAGA,gBAGVG,OAASH,QAAQ,oBADvBC,OAAQG,IAAGJ,IAAO,SAACK,EAAAC,GAKfC,GAAGC,MAAM,6BAA8B,SAACC,EAAKC,GAJ3CP,GAAMM,EAAGT,MAAQS,EAEvBH,EAAAK,KAAAD,OAGQT,OAAAW,KAAA,IAAS,SAAAP,EAAAC,GAAA,IAAAO,EACTR,EAAAS,KAAAC,EADSF,EACTE,QAAAC,EADSH,EACTG,QAAAC,EADSJ,EACTI,QAIRV,GAAAC,MANI,wEAMJ,CAAAO,EAAAC,EAAAC,GAAA,SAAAR,EAAAS,GAKQ,GAAIT,EAAK,MAAMA,EAHXM,OADmBI,QAAA,gBAAA,mBAAA,CACVH,GADUE,EAAAE,SACDH,QAAAA,EACdD,QAAAA,EACHK,QAAAA,IAILlB,EAAOgB,OAAQ,KAAAR,KAAA,CAAAW,GAAfJ,EAAgCE,SAAAL,QAAAA,EAAoBC,QAAAA,EAAAC,QAAAA,QAAAhB,OAApDsB,IAAA,OAAA,SAAAlB,EAAAC,GAAA,IAOIkB,EAAJnB,EAAgBM,OAAZa,GAPJC,EAOqBpB,EAAAS,KAAMI,EAP3BO,EAO2BP,QAAOE,EAPlCK,EAOkCL,QAAbH,EAPrBQ,EAOqBR,QAAgCD,GAAAA,MAATD,0FAASC,CAAAA,EAAhCA,EAAAC,EAAAK,GAAA,SAAAb,EAAAS,GAAyCD,GAAAA,EAAAA,MAAAA,EAA9DX,EAAAK,KAAA,CAAAK,QAAA,0CAKyBf,OACrBqB,OAAU,OAAVA,SAAAA,EADqBhB,GAAA,IAAAgB,EAESjB,EAAIS,OAFbQ,GAAAf,GAEZS,MAFY,qDAAA,CAAAM,GAAA,SAAAb,EAEZO,GAASC,GAAAA,EAFG,MAAAR,EAGvBY,EAAMV,KAAA,CAAAK,QAAA,0CAGGA,OAAAA,QAASf","file":"notification.min.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\nconst pusher = require('../config/pusher'); // Import Pusher configuration\r\n\r\n// Get all notifications\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM Notification', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new notification\r\nrouter.post('/', (req, res) => {\r\n    const { user_id, message, is_read } = req.body;\r\n    const sql = 'INSERT INTO Notification (user_id, message, is_read) VALUES (?, ?, ?)';\r\n    db.query(sql, [user_id, message, is_read], (err, result) => {\r\n        if (err) throw err;\r\n\r\n        // Send notification using Pusher\r\n        pusher.trigger('notifications', 'new-notification', {\r\n            id: result.insertId,\r\n            user_id,\r\n            message,\r\n            is_read\r\n        });\r\n\r\n        res.status(201).json({ id: result.insertId, user_id, message, is_read });\r\n    });\r\n});\r\n\r\n// Update a notification\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { user_id, message, is_read } = req.body;\r\n    const sql = 'UPDATE Notification SET user_id = ?, message = ?, is_read = ? WHERE notification_id = ?';\r\n    db.query(sql, [user_id, message, is_read, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Notification updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a notification\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM Notification WHERE notification_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Notification deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"]}