{"version":3,"sources":["groupMember.js"],"names":["express","require","router","Router","get","req","res","db","query","err","results","console","error","status","json","message","post","_req$body","body","group_id","period_id","user_id","result","insertId","put","params","_req$body2","id","affectedRows","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,GAAOC,QAAGA,gBAKhBC,OAAOE,IAAI,IAAK,SAACC,EAAKC,GAHhBC,GAAEC,MAAGP,4BAEX,SAAAQ,EAAAC,GAGQ,GAAID,EAFD,OAGCE,QAAQC,MAAMH,GAHVH,EAAAO,OAAA,KAAAC,KAAc,CAAAC,QAAA,0BAElBN,EAAJK,KAASJ,OAGRR,OAAAc,KAAA,IAAA,SAAAX,EAAAC,GAAA,IAAAW,EAOoCZ,EAAIa,KAArCC,EAPHF,EAOGE,SAAUC,EAPbH,EAOaG,UAAWC,EAPxBJ,EAOwBI,QAX7Bd,GAAAC,MAKaE,0EALb,CAAAS,EAAAC,EAAAC,GAAA,SAAAZ,EAAAa,GASJ,GAAAb,EACY,OAKAE,QAAQC,MAAMH,GALTH,EAAAO,OAAA,KAAAC,KAAc,CAAAC,QAAA,gCACnBI,EAAAA,OADmB,KAAAL,KACnBK,CAAAA,GADmBG,EAAAC,SAAAJ,SAAAA,EAAAC,UAAAA,EAAAC,QAAAA,QAIvBnB,OAAAsB,IAAA,OAAS,SAAAnB,EAAAC,GAAA,IACLK,EAAAN,EAAAoB,OAAAd,GADKe,EAEuBrB,EAAAa,KAA5BC,EAFKO,EAELP,SAAWN,EAFNa,EAEMb,UAAJQ,EAFFK,EAEEL,QAAqBd,GAArBC,MAA8B,4FAArC,CAAAW,EAAAC,EAAAC,EAAAM,GAAA,SAAAlB,EAAAa,GACH,OAAAb,GAYGE,QAAQC,MAAMH,GAXlBH,EAAgBQ,OAAK,KAAAA,KAAA,CAAAC,QAAA,iCAAA,IAAuBI,EAAAA,aAAUC,EAAAA,OAAjC,KAAAN,KAAA,CAAAC,QAAA,gCAArBT,EAAAQ,KAAA,CAAAC,QAAA,0CAKyBb,OACrByB,OAAU,OAAVA,SAAAA,EADqBrB,GAAA,IAAAqB,EAEYtB,EAAIa,OAFhBS,GAAApB,GAEXa,MAFW,oDAAA,CAAAO,GAAA,SAAAlB,EAEXW,GAAWC,OAAAA,GACjBV,QAAAC,MAAAH,GACGU,EAAAA,OAAUC,KAAAA,KAAWC,CAAAA,QAApC,iCAEQ,IAAAV,EAAAiB,aACWf,EAAJA,OAAgBC,KAAKA,KAAA,CAAAC,QAAA,gCAA5BT,EAAAQ,KAAA,CAAAC,QAAA,0CAGAc,OAAAC,QAAWjB","file":"groupMember.min.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all group members\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM GroupMember', (err, results) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(500).json({ message: 'Internal Server Error' });\r\n        }\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new group member\r\nrouter.post('/', (req, res) => {\r\n    const { group_id, period_id, user_id } = req.body;\r\n    const sql = 'INSERT INTO GroupMember (group_id, period_id, user_id) VALUES (?, ?, ?)';\r\n    db.query(sql, [group_id, period_id, user_id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error creating group member' });\r\n        }\r\n        res.status(201).json({ id: result.insertId, group_id, period_id, user_id });\r\n    });\r\n});\r\n\r\n// Update a group member\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { group_id, period_id, user_id } = req.body;\r\n    const sql = 'UPDATE GroupMember SET group_id = ?, period_id = ?, user_id = ? WHERE group_member_id = ?';\r\n    db.query(sql, [group_id, period_id, user_id, id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error updating group member' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Group member not found' });\r\n        }\r\n        res.json({ message: 'Group member updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a group member\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM GroupMember WHERE group_member_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error deleting group member' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Group member not found' });\r\n        }\r\n        res.json({ message: 'Group member deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"]}