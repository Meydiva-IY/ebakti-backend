{"version":3,"sources":["challenge.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","console","error","status","json","message","post","body","title","description","due_date","clg_pic","sql","result","id","insertId","put","params","affectedRows","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all challenges\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM Challenge', (err, results) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(500).json({ message: 'Internal Server Error' });\r\n        }\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new challenge\r\nrouter.post('/', (req, res) => {\r\n    const { title, description, due_date, clg_pic } = req.body;\r\n    const sql = 'INSERT INTO Challenge (title, description, due_date, clg_pic) VALUES (?, ?, ?, ?)';\r\n    db.query(sql, [title, description, due_date, clg_pic], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error creating challenge' });\r\n        }\r\n        res.status(201).json({ id: result.insertId, title, description, due_date, clg_pic });\r\n    });\r\n});\r\n\r\n// Update a challenge\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { title, description, due_date, clg_pic } = req.body;\r\n    const sql = 'UPDATE Challenge SET title = ?, description = ?, due_date = ?, clg_pic = ? WHERE challenge_id = ?';\r\n    db.query(sql, [title, description, due_date, clg_pic, id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error updating challenge' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Challenge not found' });\r\n        }\r\n        res.json({ message: 'Challenge updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a challenge\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM Challenge WHERE challenge_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error deleting challenge' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Challenge not found' });\r\n        }\r\n        res.json({ message: 'Challenge deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"challenge.dev.js"}