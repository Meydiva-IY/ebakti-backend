{"version":3,"sources":["groupMember.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","console","error","status","json","message","post","body","group_id","period_id","user_id","sql","result","id","insertId","put","params","affectedRows","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all group members\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM GroupMember', (err, results) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(500).json({ message: 'Internal Server Error' });\r\n        }\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new group member\r\nrouter.post('/', (req, res) => {\r\n    const { group_id, period_id, user_id } = req.body;\r\n    const sql = 'INSERT INTO GroupMember (group_id, period_id, user_id) VALUES (?, ?, ?)';\r\n    db.query(sql, [group_id, period_id, user_id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error creating group member' });\r\n        }\r\n        res.status(201).json({ id: result.insertId, group_id, period_id, user_id });\r\n    });\r\n});\r\n\r\n// Update a group member\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { group_id, period_id, user_id } = req.body;\r\n    const sql = 'UPDATE GroupMember SET group_id = ?, period_id = ?, user_id = ? WHERE group_member_id = ?';\r\n    db.query(sql, [group_id, period_id, user_id, id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error updating group member' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Group member not found' });\r\n        }\r\n        res.json({ message: 'Group member updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a group member\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM GroupMember WHERE group_member_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return res.status(400).json({ message: 'Error deleting group member' });\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return res.status(404).json({ message: 'Group member not found' });\r\n        }\r\n        res.json({ message: 'Group member deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"groupMember.dev.js"}