{"version":3,"sources":["profile.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","json","post","body","user_id","profile_picture","full_name","department","date_of_birth","gender","address","sql","result","status","id","insertId","put","params","message","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all profiles\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM Profile', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new profile\r\nrouter.post('/', (req, res) => {\r\n    const { user_id, profile_picture, full_name, department, date_of_birth, gender, address } = req.body;\r\n    const sql = 'INSERT INTO Profile (user_id, profile_picture, full_name, department, date_of_birth, gender, address) VALUES (?, ?, ?, ?, ?, ?, ?)';\r\n    db.query(sql, [user_id, profile_picture, full_name, department, date_of_birth, gender, address], (err, result) => {\r\n        if (err) throw err;\r\n        res.status(201).json({ id: result.insertId, user_id, profile_picture, full_name, department, date_of_birth, gender, address });\r\n    });\r\n});\r\n\r\n// Update a profile\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { user_id, profile_picture, full_name, department, date_of_birth, gender, address } = req.body;\r\n    const sql = 'UPDATE Profile SET user_id = ?, profile_picture = ?, full_name = ?, department = ?, date_of_birth = ?, gender = ?, address = ? WHERE profile_id = ?';\r\n    db.query(sql, [user_id, profile_picture, full_name, department, date_of_birth, gender, address, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Profile updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete a profile\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM Profile WHERE profile_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Profile deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"profile.dev.js"}