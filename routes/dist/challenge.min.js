"use strict";var express=require("express"),router=express.Router(),db=require("../config/db");router.get("/",function(e,t){db.query("SELECT * FROM Challenge",function(e,r){if(e)return console.error(e),t.status(500).json({message:"Internal Server Error"});t.json(r)})}),router.post("/",function(e,t){var r=e.body,s=r.title,n=r.description,o=r.due_date,l=r.clg_pic;db.query("INSERT INTO Challenge (title, description, due_date, clg_pic) VALUES (?, ?, ?, ?)",[s,n,o,l],function(e,r){if(e)return console.error(e),t.status(400).json({message:"Error creating challenge"});t.status(201).json({id:r.insertId,title:s,description:n,due_date:o,clg_pic:l})})}),router.put("/:id",function(e,t){var r=e.params.id,s=e.body,n=s.title,o=s.description,l=s.due_date,u=s.clg_pic;db.query("UPDATE Challenge SET title = ?, description = ?, due_date = ?, clg_pic = ? WHERE challenge_id = ?",[n,o,l,u,r],function(e,r){return e?(console.error(e),t.status(400).json({message:"Error updating challenge"})):0===r.affectedRows?t.status(404).json({message:"Challenge not found"}):void t.json({message:"Challenge updated successfully"})})}),router.delete("/:id",function(e,t){var r=e.params.id;db.query("DELETE FROM Challenge WHERE challenge_id = ?",[r],function(e,r){return e?(console.error(e),t.status(400).json({message:"Error deleting challenge"})):0===r.affectedRows?t.status(404).json({message:"Challenge not found"}):void t.json({message:"Challenge deleted successfully"})})}),module.exports=router;
//# sourceMappingURL=challenge.min.js.map
