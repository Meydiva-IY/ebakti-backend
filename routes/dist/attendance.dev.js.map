{"version":3,"sources":["attendance.js"],"names":["express","require","router","Router","db","get","req","res","query","err","results","json","post","body","group_id","period_id","user_id","gambar_selfie","date","location","status","sql","result","id","insertId","put","params","message","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../config/db');\r\n\r\n// Get all attendance records\r\nrouter.get('/', (req, res) => {\r\n    db.query('SELECT * FROM Attendance', (err, results) => {\r\n        if (err) throw err;\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Create a new attendance record\r\nrouter.post('/', (req, res) => {\r\n    const { group_id, period_id, user_id, gambar_selfie, date, location, status } = req.body;\r\n    const sql = 'INSERT INTO Attendance (group_id, period_id, user_id, gambar_selfie, date, location, status) VALUES (?, ?, ?, ?, ?, ?, ?)';\r\n    db.query(sql, [group_id, period_id, user_id, gambar_selfie, date, location, status], (err, result) => {\r\n        if (err) throw err;\r\n        res.status(201).json({ id: result.insertId, group_id, period_id, user_id, gambar_selfie, date, location, status });\r\n    });\r\n});\r\n\r\n// Update an attendance record\r\nrouter.put('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { group_id, period_id, user_id, gambar_selfie, date, location, status } = req.body;\r\n    const sql = 'UPDATE Attendance SET group_id = ?, period_id = ?, user_id = ?, gambar_selfie = ?, date = ?, location = ?, status = ? WHERE attendance_id = ?';\r\n    db.query(sql, [group_id, period_id, user_id, gambar_selfie, date, location, status, id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Attendance updated successfully' });\r\n    });\r\n});\r\n\r\n// Delete an attendance record\r\nrouter.delete('/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const sql = 'DELETE FROM Attendance WHERE attendance_id = ?';\r\n    db.query(sql, [id], (err, result) => {\r\n        if (err) throw err;\r\n        res.json({ message: 'Attendance deleted successfully' });\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"attendance.dev.js"}